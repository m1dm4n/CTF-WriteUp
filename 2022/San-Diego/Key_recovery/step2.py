from Crypto.PublicKey import RSA
from Crypto.Util.number import bytes_to_long
n = 5160506883782749616132783578676599737578181750862768189533614818450602210629498054577038706877878591461730975523298347363175809269708590576234053680856190531462016049228664524032245630383570864862594528039304198008516406311503234891848472500677235233306353194822807809226747910258650946427684458449678036010148784936158504973297476213297246992333561058386122648007679022132436712737675349659381843139241424768652685748923787146445880090032877364507196680645491851110761225396699447973935528224071347899180813330462539836529892009545804429224998924081820947865509113139516184975975194402615711301223800470960317508112510398414265245430205305656570750598921943681519089652640029328107852739267177564249991034151531241398709715045120413280018614249373651221817769351920991448859276737358186725656225666533699293442886175394481957179750678824007967261562704869503123637677559148438013660238339484372216476981537246533669889453857
p = 2239102666933135561942199225708085018160481780967034043147173047566147839050050738202428315348958522434264115740745667710189513247094196395750632928574653735378028005561278278302038978641694242277350257427678723520067491316314717666202751730495393103266518360996211384098928951906037855023727142231156286566083489482555221641491792832584115123420535751875053864863400361980329030505560413787641522985318765990149397031003492064905853575121122602512739897993727029
q = 2304720975948376863359610286058391363543268995439609172215661899731700376813775204230297106360450320802501976838081201590579942180067889742222688077008414263691552744984726414092635334119541091641830599189755142061897046040736060543164061630311637326841024045175364439686677871532139068178542223943598854738781925353561709503743701960412785035904083638325749823108093723759162117295626415249606225750633917328179020525462879693481494374226894054438335455724371133
e = 65537
phi = (p - 1) * (q - 1)
d = pow(e, -1, phi)


def test(n, e, d):
    text = b"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
    p = bytes_to_long(text)
    ct = pow(p, e, n)
    pt = pow(ct, d, n)
    return pt == p


assert test(n, e, d)

key = RSA.construct([n, e, d])
with open("key.pem", "wb") as f:
    f.write(key.export_key('PEM'))
