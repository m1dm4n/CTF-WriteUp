from Crypto.Util.number import long_to_bytes as ltb, bytes_to_long as btl, inverse, isPrime
from sage.all_cmdline import two_squares

hint = 461200758828450131454210143800752390120604788702850446626677508860195202567872951525840356360652411410325507978408159551511745286515952077623277648013847300682326320491554673107482337297490624180111664616997179295920679292302740410414234460216609334491960689077587284658443529175658488037725444342064697588997
ct = 8300471686897645926578017317669008715657023063758326776858584536715934138214945634323122846623068419230274473129224549308720801900902282047728570866212721492776095667521172972075671434379851908665193507551179353494082306227364627107561955072596424518466905164461036060360232934285662592773679335020824318918

p, q = two_squares(hint)
p = int(p)
q = int(q)//2
assert isPrime(p)
assert isPrime(q)

d = inverse(0x10001, (p-1)*(q-1))


print(ltb(int(pow(ct, d, p*q))).decode())
# HCMUS-CTF{either_thu3_0r_3uclid_wh1ch3v3r_it_t4k35}
