from sage.all import *


payload = [(43388321209941149759420236104888244958223766953174235657296806338137402595305, 37632188086374184215683033126159073460254294011950547981535070795036239832355, 92108091792471709252188722518594984729882768405187504755436732774585940846697, 12869524000789066186500889639637920911004761166389516004079240739803143077888), (48635463943209834798109814161294753926839975257569795305637098542720658922315, 59788276253433599793942812842269987166570490776324992751827829948620612676734, 64197159907868913898427524841421396148163748131720023173641233820754829644122, 66023263753649617651363227872615269225194285301083460433407165563118991441920)]

n = 115792089210356248762697446949407573529996955224135760342422259061068512044369

m = len(payload)
mat = matrix(QQ, m + 2, m + 2) 

for i in range(m):
    z, r, s, leak_k = payload[i]
    mat[i, i] = -n
    mat[m, i] = (r*inverse_mod(s, n)) % n
    mat[m + 1, i] = ((z*inverse_mod(s, n)) - leak_k) % n

mat[m, m] = QQ(2**120)/QQ(n)
mat[m + 1, m + 1] = QQ(2**120)

for i in mat.LLL():
    if abs(i[-1]) == 2**120:
        print(int(i[-2]*n/(2**120)).to_bytes(32, 'big').strip(b'\0').decode())
