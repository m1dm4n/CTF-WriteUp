g_rows = [[6, 1, 1, 84], [8, 1, 82], [14, 79], [16, 77], [18, 74], [4, 16, 72], [3, 18, 70], [3, 21, 68], [3, 23, 66], [3, 25, 54, 1, 1, 1], [3, 27, 48, 1, 1, 1], [3, 29, 42, 14], [3, 30, 16, 1, 17, 18], [3, 32, 3, 13, 11, 22], [2, 33, 1, 18, 5, 24], [3, 31, 27, 25], [3, 29, 31, 1, 24], [2, 28, 39, 21], [2, 26, 42, 19], [2, 25, 47, 17], [2, 23, 50, 15], [2, 22, 53, 14], [2, 21, 57, 13], [2, 20, 57, 12], [2, 1, 17, 61, 11], [2, 18, 62, 9], [2, 17, 64, 7, 1], [2, 16, 65, 6, 1], [2, 15, 67, 4, 2], [2, 15, 68, 4, 3], [2, 14, 5, 64, 2, 4], [2, 13, 4, 16, 49, 1, 4], [2, 12, 3, 67, 5], [2, 12, 3, 69, 6], [2, 12, 2, 70, 6], [2, 12, 1, 72, 5], [3, 12, 26, 46, 5], [3, 11, 25, 47, 5], [3, 9, 25, 47, 5], [4, 9, 8, 2, 1, 1, 1, 1, 1, 1, 1, 28, 4], [13, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 20, 4], [4, 1, 2, 1, 13, 2, 22, 1, 14, 4], [1, 3, 7, 13, 4, 22, 8, 1, 1, 1, 4, 3], [11, 7, 13, 4, 23, 1, 13, 1, 7], [10, 7, 12, 5, 22, 1, 17, 1, 3], [10, 7, 12, 6, 11, 10, 2, 19, 1], [9, 8, 11, 7, 11, 10, 4, 19, 5, 1], [8, 8, 10, 8, 10, 10, 4, 18, 8], [8, 8, 10, 9, 10, 9, 6, 18, 7], [7, 9, 9, 9, 11, 9, 8, 17, 7], [7, 9, 8, 11, 9, 1, 9, 8, 16, 7], [6, 9, 7, 11, 10, 1, 8, 10, 15, 6], [6, 9, 7, 12, 8, 2, 7, 12, 15, 6], [5, 8, 7, 6, 15, 2, 7, 13, 14, 6], [5, 7, 1, 6, 6, 5, 7, 4, 5, 16, 12, 6], [6, 2, 3, 5, 7, 6, 6, 5, 3, 18, 9, 6], [6, 1, 2, 1, 4, 7, 6, 6, 6, 13, 7, 8, 6], [11, 2, 4, 8, 6, 4, 24, 5, 10, 6], [1, 8, 2, 3, 9, 7, 3, 25, 6, 10, 6], [4, 5, 3, 23, 27, 6, 11, 6], [6, 3, 3, 61, 10, 6], [8, 2, 3, 60, 11, 3, 1], [8, 1, 3, 60, 10, 4], [1, 1, 1, 1, 4, 59, 10, 3, 1], [5, 1, 4, 60, 10, 2, 2], [12, 4, 30, 28, 9, 4, 2], [8, 3, 4, 29, 26, 9, 4, 2], [5, 1, 2, 4, 26, 2, 25, 8, 5, 2], [3, 7, 5, 23, 6, 23, 7, 4], [1, 9, 5, 35, 21, 7, 5, 3], [11, 6, 58, 6, 6, 3], [10, 6, 57, 12, 3], [8, 1, 7, 57, 12, 4], [6, 3, 6, 57, 12, 4], [2, 5, 6, 1, 56, 11, 4], [10, 5, 2, 55, 11, 1], [13, 5, 2, 54, 11, 2, 1], [8, 3, 3, 3, 54, 10, 3, 1], [8, 4, 4, 4, 52, 10, 5], [7, 4, 1, 4, 5, 52, 2, 6, 5], [7, 2, 2, 3, 6, 50, 7, 7], [7, 1, 4, 3, 7, 49, 8, 7], [7, 7, 2, 9, 48, 8, 8], [17, 5, 4, 44, 6, 8], [31, 40, 2, 7, 9], [33, 37, 3, 5, 10], [30, 4, 32, 6, 5, 10], [30, 6, 28, 7, 3, 11], [30, 9, 23, 10, 1, 1, 1, 1], [30, 14, 1, 1, 8, 1, 1, 13, 3, 2, 1, 4], [30, 16, 1, 1, 15, 7, 7], [30, 44, 1, 10], [30, 44, 2, 16], [29, 44, 3, 15], [30, 1, 1, 38, 5, 14], [31, 1, 34, 7, 13]]
g_cols = [[42, 14, 4, 7, 4, 20], [42, 14, 3, 5, 5, 20], [14, 2, 6, 15, 4, 5, 4, 20], [6, 19, 3, 15, 4, 4, 5, 21], [5, 17, 13, 1, 15, 3, 4, 5, 21], [42, 10, 4, 3, 2, 6, 21], [40, 9, 2, 2, 2, 3, 5, 21], [40, 6, 4, 4, 3, 2, 5, 5, 13], [1, 39, 5, 7, 3, 1, 1, 5, 3, 3, 13], [40, 4, 8, 4, 2, 2, 4, 4, 3, 14], [1, 39, 2, 9, 5, 6, 7, 14], [39, 10, 8, 6, 8, 15], [1, 39, 12, 3, 4, 15], [1, 38, 12, 1, 16, 17], [2, 35, 11, 1, 20, 16], [2, 29, 1, 2, 11, 23, 2, 14], [2, 27, 3, 2, 9, 19, 13], [3, 26, 4, 5, 6, 9, 15, 12], [3, 23, 4, 5, 4, 19, 13, 12], [4, 22, 5, 6, 2, 25, 1, 12], [4, 21, 4, 7, 15, 12, 22], [4, 19, 5, 8, 15, 16, 21], [5, 18, 14, 13, 18, 19], [5, 16, 6, 8, 13, 20, 18], [6, 15, 16, 12, 24, 17], [6, 13, 18, 10, 25, 3, 12], [7, 12, 17, 9, 28, 15], [7, 11, 19, 8, 29, 14], [8, 10, 19, 7, 31, 14], [8, 8, 20, 6, 33, 10, 2], [9, 8, 20, 5, 6, 1, 24, 2, 1], [9, 6, 21, 4, 6, 24, 10], [10, 6, 21, 3, 8, 1, 26, 9], [11, 4, 22, 3, 39, 9], [11, 3, 23, 1, 41, 8, 1], [12, 2, 22, 1, 43, 8], [13, 1, 23, 1, 44, 8], [13, 23, 44, 7], [14, 16, 7, 8, 1, 1, 1, 30, 8], [14, 24, 3, 1, 1, 1, 1, 28, 8], [14, 24, 16, 28, 7], [13, 24, 19, 28, 7], [14, 22, 18, 8, 27], [36, 2, 18, 9, 27], [39, 16, 9, 27], [39, 16, 9, 20, 6], [39, 14, 10, 28], [39, 13, 11, 21, 5], [39, 11, 11, 29], [39, 10, 13, 22, 5], [39, 6, 16, 22, 5], [39, 5, 13, 22, 5], [12, 26, 13, 11, 21, 5], [12, 26, 15, 11, 21, 5], [12, 26, 15, 11, 20, 5], [13, 25, 16, 12, 20, 5], [12, 25, 15, 12, 20, 5], [13, 26, 14, 34, 5], [13, 25, 13, 33, 5], [13, 26, 11, 42], [13, 25, 10, 36, 5], [14, 25, 7, 39, 5], [14, 24, 3, 41, 6], [14, 25, 43, 6], [14, 25, 47, 6], [15, 24, 2, 43, 7], [15, 24, 2, 42, 7], [15, 23, 4, 40, 7], [15, 23, 5, 38, 8], [15, 25, 6, 38, 8], [14, 23, 7, 5, 26, 9], [14, 1, 24, 8, 4, 27, 9], [13, 3, 23, 8, 33, 9], [13, 3, 23, 10, 31, 8], [12, 4, 22, 10, 30, 9, 1], [12, 5, 22, 11, 29, 6, 2], [12, 5, 22, 11, 28, 12], [11, 6, 22, 12, 1, 1, 1, 1, 2, 16, 1, 1, 2, 4], [11, 7, 21, 12, 1, 1, 1, 3], [11, 8, 21, 11, 23, 1, 1, 4, 2], [11, 8, 20, 12, 23, 6, 4, 1], [10, 9, 20, 35, 8, 5], [10, 11, 19, 44, 5], [10, 12, 18, 44, 6], [10, 13, 18, 42, 6], [10, 14, 15, 26, 14, 2, 6], [9, 15, 13, 22, 13, 3, 5], [10, 17, 14, 19, 13, 6, 5], [9, 20, 10, 3, 13, 12, 6, 1, 5], [9, 21, 9, 5, 12, 8, 1, 4], [10, 20, 2, 5, 18, 9, 14, 4], [9, 20, 7, 1, 25, 13, 1, 4], [9, 17, 12, 1, 22, 3, 12, 2, 4], [9, 17, 16, 14, 1, 6, 10, 2, 4], [10, 15, 17, 16, 4, 6, 1, 10, 2, 4], [9, 14, 19, 14, 5, 6, 1, 8, 2, 4]]

def check(picture):
    global g_rows
    global g_cols
    
    for i in range(0, 96):
        for j in range(0, 96):
            c = picture[i][j]
            if (c != '.' and c != ' '):
                return False
    
    for k in range(0, 96):
        row_idx = 0
        for m in range(len(g_rows[k])):
            if g_rows[k][m] == -1:
                break
                #continue
            while (row_idx <= 95 and picture[k][row_idx] == ' '):
                row_idx += 1
                
            if row_idx == 96:
                return False
                
            row_length = g_rows[k][m] - 1
            row_idx += 1
            while (row_length and row_idx <= 95 and picture[k][row_idx] == '.'):
                row_length -= 1
                row_idx += 1
            
            if row_length:
                return False
                
            if row_idx <= 95 and picture[k][row_idx] == '.':
                return False
    
    for n in range(0, 96):
        cols_idx = 0
        for ii in range(0, len(g_cols[k])):
            while (cols_idx <= 95 and picture[cols_idx][n] == ' '):
                cols_idx += 1
                
            if cols_idx == 96:
                return False
                
            col_length = g_cols[n][ii] - 1
            cols_idx += 1
            while (col_length and cols_idx <= 95 and picture[cols_idx][n] == '.'):
                col_length -= 1
                cols_idx += 1
            
            if col_length:
                return False
            
            if (cols_idx <= 95 and picture[cols_idx][n] == '.'):
                return False
    
    return True
    
if __name__ == "__main__":
    picture = [[" " for i in range(96)] for j in range(96)]
    
    #target: find picture
print(check(picture))
    
    